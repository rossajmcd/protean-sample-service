;; Protean integration test reference codex
;;
;; Models a simple RESTful API for simulation,
;; simulation testing and integration testing.

{
  :sampleservice {
    :paths {
      "token" {
        :get {
          :doc "Get an auth token"
          :rsp {
            :success-code 200
            :body-res "access_token"
            :body {"access_token" "mytoken" "token_type" "bearer"}
          }
        }
      }

      "things" {
        :get {
          :doc "Get thing(s) via optional filter/query request parameter"
          :req {
            :headers {"Authorization" "psv+Bearer token"}
            :query-params {:optional {"lookup" "psv+lookup"}}
            ;; the below is optional [standard|json] - defaults to standard
            ;;:query-params-type :standard
            :gen {"lookup" {:type "Int"}}
          }
          :rsp {
            :success-code 200
            ; N.B. here we simulate the all things response types
            :body ["thingy" "thingy2"]
          }
        }

        :post {
          :doc "Create a thing"
          :req {
            :headers {"Authorization" "psv+Bearer token"}
            :body {"description" "psv+description"}
            :gen {"description" {:type "String"}}
          }
          :rsp {
            :success-code 201
            :status 201
            :headers {"Location" "/things/1"}
          }
        }
      }

      "things-standard-query-param" {
        :get {
          :doc "Get things via mandatory standard request parameter"
          :req {
            :headers {"Authorization" "psv+Bearer token"}
            :query-params {:required {"lookup" "things/psv+"}}
            ;; the below is optional [standard|json] - defaults to standard
            ;;:query-params-type :standard
            :gen {"lookup" {:type "Int"}}
          }
          :rsp {
            :success-code 200
            ; N.B. here we simulate the all things response types
            :body ["thingy" "thingy2"]
          }
        }
      }

      "things/*" {
        :get {
          :doc "Get a thing with an id *"
          :req {
            :headers {"Authorization" "psv+Bearer token"}
            :gen {"things/psv+" {:type "Int"}}
          }
          :rsp {:success-code 200 :content-type "text/plain" :body "thingy"}
        }

        :put {
          :doc "Edit a thing with an id *"
          :req {
            :headers {"Authorization" "psv+Bearer token"}
            :body {"description" "psv+description"}
            :gen {"things/psv+" {:type "Int"} "description" {:type "String"}}
          }
          :rsp {:success-code 204}
        }

        :delete {
          :doc "Delete a thing with an id *"
          :req {
            :headers {"Authorization" "psv+Bearer token"}
            :gen {"things/psv+" {:type "Int"}}
          }
          :rsp {:success-code 204}
        }
      }

      "things-json" {
        :get {
          :doc "Get things all or filter restricted by jsn query param"
          :req {
            :headers {"Authorization" "psv+Bearer token"}
            :query-params {:required {"q" {"lookup" "things/psv+"}}}
            :query-params-type :json
            :gen {"lookup" {:type "Int"}}
          }
          :rsp {
            :success-code 200
            ; N.B. here we simulate the all complexthings response types
            :body ["complexthingy" "complexthingy2"]
          }
        }
      }
    }
  }
}
